{"version":3,"sources":["components/movies.js","App.js","index.js"],"names":["RenderMovie","value","genrelist","this","props","genres","map","el","genreList","className","onClick","updateState","title","overview","vote_average","poster_path","release_date","genre","toString","src","alt","react","Component","App","state","isLoading","movies","selectMovie","handleSelectMovie","newObject","setState","console","log","a","movieResults","axios","get","then","json","weektrend","data","results","upcoming","topLank","curr","Talmo","element","name","first_air_date","genre_ids","href","class","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93152ca9.chunk.js","sourcesContent":["import react from \"react\";\nexport class RenderMovie extends react.Component {\n  genreList(value) {\n    switch (value) {\n      case 28:\n        return \"Action\";\n\n      case 12:\n        return \"Adventure\";\n\n      case 16:\n        return \"Animation\";\n\n      case 35:\n        return \"Comedy\";\n\n      case 80:\n        return \"Crime\";\n\n      case 99:\n        return \"Documentary\";\n\n      case 18:\n        return \"Drama\";\n\n      case 10751:\n        return \"Family\";\n      case 36:\n        return \"History\";\n      case 14:\n        return \"Fantasy\";\n\n      case 27:\n        return \"Horror\";\n\n      case 10402:\n        return \"Music\";\n\n      case 9648:\n        return \"Mystery\";\n\n      case 10749:\n        return \"Romance\";\n\n      case 878:\n        return \"SF\";\n\n      case 10770:\n        return \"TV Movie\";\n\n      case 53:\n        return \"Thriller\";\n\n      case 10752:\n        return \"War\";\n\n      case 37:\n        return \"Westeren\";\n      case 10759:\n        return \"Action & Adventure\";\n      case 10762:\n        return \"Kids\";\n      case 10763:\n        return \"News\";\n      case 10764:\n        return \"Reality\";\n      case 10765:\n        return \"Sci-Fi&Fantasy\";\n      default:\n        break;\n    }\n  }\n  render() {\n    const genrelist = this.props.genres.map((el) => this.genreList(el));\n    return (\n      <section\n        className=\"movie\"\n        onClick={() =>\n          this.props.updateState({\n            title: this.props.title,\n            overview: this.props.overview,\n            vote_average: this.props.vote_average,\n            poster_path: this.props.poster_path,\n            release_date: this.props.release_date,\n            genre: genrelist.toString(),\n          })\n        }\n      >\n        <img\n          className=\"poster\"\n          src={this.props.poster_path}\n          alt={this.props.alt}\n        />\n        <p className=\"title\">\n          <b>{this.props.title}</b>\n        </p>\n        <p className=\"genres\">{genrelist.toString()}</p>\n        <p className=\"release\">{this.props.release_date}</p>\n      </section>\n    );\n  }\n}\n","import axios from \"axios\";\nimport React from \"react\";\nimport { RenderMovie } from \"./components/movies\";\nimport \"./css/App.css\";\nimport \"./css/movies.css\";\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: {},\n    selectMovie: null,\n  };\n  Talmo() {\n    console.log(\n      \"%c☆★탈모빔★☆\",\n      `background-image:url(\"https://pbs.twimg.com/profile_images/1157826618661806080/K2qrDocr_400x400.jpg\");background-size:100px 200px;color:teal;font-size:60px;`\n    );\n    console.log(\n      \"당신은 개발자 콘솔에 손을 댔으므로 탈모빔에 맞으셨습니다. 이 저주는 풀 수 없습니다. 바꿔줄 수 없어 돌아가.\"\n    );\n  }\n  handleSelectMovie = (newObject) => {\n    this.setState({ selectMovie: newObject });\n  };\n\n  async componentDidMount() {\n    const movieResults = {};\n    await axios\n      .get(\n        `https://api.themoviedb.org/3/trending/all/week?api_key=106ab699e8e239357e9cdd4f9ac16511&language=ko`\n      )\n      .then((json) => {\n        movieResults.weektrend = json.data.results;\n      });\n    await axios\n      .get(\n        `https://api.themoviedb.org/3/movie/upcoming?api_key=106ab699e8e239357e9cdd4f9ac16511&language=ko`\n      )\n      .then((json) => {\n        movieResults.upcoming = json.data.results;\n      });\n    await axios\n      .get(\n        `https://api.themoviedb.org/3/movie/top_rated?api_key=106ab699e8e239357e9cdd4f9ac16511&language=ko`\n      )\n      .then((json) => {\n        movieResults.topLank = json.data.results;\n      });\n    this.setState((curr) => (curr.movies = movieResults));\n    this.setState((curr) => (curr.isLoading = false));\n  }\n  render() {\n    console.log(this.state);\n    this.Talmo();\n    return (\n      <div className=\"container\">\n        {this.state.isLoading ? (\n          <h1>Loading...</h1>\n        ) : (\n          <div>\n            <div className=\"movieList\">\n              <h1>주간 트렌드</h1>\n              <popular className=\"movieSection\">\n                {this.state.movies[\"weektrend\"].map((element) => (\n                  <RenderMovie\n                    title={element.title || element.name}\n                    poster_path={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2/${element.poster_path}`}\n                    release_date={\n                      element.release_date || element.first_air_date\n                    }\n                    overview={element.overview}\n                    alt={element.title || element.name}\n                    genres={element.genre_ids}\n                    updateState={this.handleSelectMovie}\n                    vote_average={element.vote_average}\n                  />\n                ))}\n              </popular>\n              <h1>출시 예정</h1>\n              <upcoming className=\"movieSection\">\n                {this.state.movies[\"upcoming\"].map((element) => (\n                  <RenderMovie\n                    title={element.title || element.name}\n                    poster_path={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2/${element.poster_path}`}\n                    release_date={\n                      element.release_date || element.first_air_date\n                    }\n                    overview={element.overview}\n                    alt={element.title || element.name}\n                    genres={element.genre_ids}\n                    updateState={this.handleSelectMovie}\n                    vote_average={element.vote_average}\n                  />\n                ))}\n              </upcoming>\n              <h1>톱-랭크</h1>\n              <toplank className=\"movieSection\">\n                {this.state.movies[\"topLank\"].map((element) => (\n                  <RenderMovie\n                    title={element.title || element.name}\n                    poster_path={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2${element.poster_path}`}\n                    release_date={\n                      element.release_date || element.first_air_date\n                    }\n                    overview={element.overview}\n                    alt={element.title || element.name}\n                    genres={element.genre_ids}\n                    updateState={this.handleSelectMovie}\n                    vote_average={element.vote_average}\n                  />\n                ))}\n              </toplank>\n            </div>\n            <div className=\"movieDetail\">\n              {this.state.selectMovie == null ? (\n                <p className=\"loading\">Nothing selected</p>\n              ) : (\n                <div className=\"details\">\n                  <div className=\"detail\">\n                    <img\n                      src={this.state.selectMovie.poster_path}\n                      alt={this.state.selectMovie.title}\n                    ></img>\n                    <h2>{this.state.selectMovie.title}</h2>\n                    <span>{this.state.selectMovie.release_date}</span>\n                    <span> / {this.state.selectMovie.vote_average}</span>\n                    <span> / {this.state.selectMovie.genre}</span>\n                  </div>\n                  <p>\n                    {this.state.selectMovie.overview == null ? (\n                      <p>no description</p>\n                    ) : (\n                      this.state.selectMovie.overview\n                    )}\n                  </p>\n                </div>\n              )}\n              <a href=\"https://github.com/jms080809\">\n                <i class=\"fab fa-github\"></i>\n              </a>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}